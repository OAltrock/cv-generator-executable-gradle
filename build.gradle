plugins {
  id 'java'
  id 'application'
  id 'org.javamodularity.moduleplugin' version '1.8.12'
  id 'org.openjfx.javafxplugin' version '0.0.13'
  id 'org.beryx.jlink' version '3.0.1'
  }

group 'com.fdmgroup'
version '0.0.1'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.10.0'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

application {
  mainModule = 'com.fdmgroup.cvgeneratorgradle'
  mainClass = 'com.fdmgroup.cvgeneratorgradle.Main'
  /* mainModule.set("com.fdmgroup.cvgeneratorgradle") */
}

javafx {
  version = '21'
  modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
  implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')

  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
useJUnitPlatform()}


jlink {
  jpackage {
          if (org.gradle.internal.os.OperatingSystem.current().windows) {
              installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
              imageOptions += ['--win-console']
          }
          if(org.gradle.internal.os.OperatingSystem.current().linux) {
               installerOptions += ['--deb']
          }
          if(org.gradle.internal.os.OperatingSystem.current().macOsX) {
                         installerOptions += ['--dmg']
                    }
      }

  imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  launcher {
    name = 'windows-cv-app'
  }
}

jlinkZip {
  group = 'distribution'
}
